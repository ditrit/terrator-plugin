import { subnetId, tags, vpcIdReference } from './default';

const awsVpc = {
  type: 'aws_vpc',
  blockType: 'resource',
  provider: 'aws',
  displayName: 'Virtual Private Cloud (VPC)',
  description: 'Amazon Virtual Private Cloud (Amazon VPC) enables you to launch AWS resources into a virtual network that you\'ve defined.',
  icon: 'Aws_Virtual-Private-Cloud',
  isContainer: true,
  model: 'DefaultContainer',
  url: 'https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html',
  categories: ['AWS', 'Networking'],
  tags: [],
  definedAttributes: [
    {
      name: 'cidr_block',
      displayName: 'CIDR block',
      description: 'IPv4 CIDR block of the desired VPC.',
      type: 'String',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/configure-your-vpc.html',
      rules: {
        regex: '^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$',
      },
    },
    {
      name: 'ipv4_ipam_pool_id',
      displayName: 'IPv4 IPAM pool ID',
      description: 'ID of an IPv4 IPAM pool you want to use for allocating this VPC\'s CIDR.',
      type: 'String',
      url: 'https://docs.aws.amazon.com/vpc/latest/ipam/what-it-is-ipam.html',
    },
    {
      name: 'ipv4_netmask_length',
      displayName: 'IPv4 netmask length',
      description: 'Netmask length of the IPv4 CIDR you want to allocate to this VPC.',
      type: 'Number',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/configure-your-vpc.html',
      rules: {
        max: 32,
        min: 1,
      },
    },
    {
      name: 'ipv6_cidr_block',
      displayName: 'IPv6 CIDR block',
      description: 'IPv6 CIDR block to request from an IPAM Pool.',
      type: 'String',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/configure-your-vpc.html',
      rules: {
        regex: '[a-fA-F0-9]{4}(:[a-fA-F0-9]{4}){7}',
      },
    },
    {
      name: 'ipv6_ipam_pool_id',
      displayName: 'IPv6 IPAM pool ID',
      description: 'IPAM Pool ID for a IPv6 pool',
      type: 'String',
      url: 'https://docs.aws.amazon.com/vpc/latest/ipam/what-it-is-ipam.html',
    },
    {
      name: 'ipv6_netmask_length',
      displayName: 'IPv6 netmask length',
      description: 'Netmask length to request from IPAM Pool.',
      type: 'Number',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/configure-your-vpc.html',
      rules: {
        values: [
          56,
        ],
      },
    },
    {
      name: 'ipv6_cidr_block_network_border_group',
      displayName: 'IPv6 CIDR block network border group',
      description: 'Restrict advertisement of public addresses to specific Network Border Groups such as LocalZones.',
      type: 'String',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/Extend_VPCs.html',
    },
    {
      name: 'instance_tenancy',
      displayName: 'Instance tenancy',
      description: 'Allowed tenancy of instances launched into the selected VPC.',
      type: 'String',
      url: 'https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html',
      rules: {
        values: [
          'default',
          'dedicated',
        ],
      },
    },
    {
      name: 'enable_dns_support',
      displayName: 'Enable DNS support',
      description: 'Enable DNS support in the VPC.',
      type: 'Boolean',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html',
    },
    {
      name: 'enable_dns_hostnames',
      displayName: 'Enable DNS hostnames',
      description: 'Enable DNS hostnames in the VPC.',
      type: 'Boolean',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html',
    },
    {
      name: 'enable_classiclink',
      displayName: 'Enable ClassicLink',
      description: 'Enable ClassicLink for the VPC, allowing you to link EC2-Classic instances to the VPC.',
      type: 'Boolean',
      url: 'https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html',
    },
    {
      name: 'enable_classiclink_dns_support',
      displayName: 'Enable ClassicLink DNS support',
      description: 'Enable ClassicLink DNS Support for the VPC.<br>If set to true, DNS hostnames that are addressed between linked EC2-Classic instances and instances in the VPC will resolve to private IP addresses.',
      type: 'Boolean',
      url: 'https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html',
    },
    {
      name: 'assign_generated_ipv6_cidr_block',
      displayName: 'Assign generated IPv6 CIDR block',
      description: 'Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC.',
      type: 'Boolean',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/configure-your-vpc.html',
    },
    {
      name: 'enable_network_address_usage_metrics',
      displayName: 'Enable network address usage metrics',
      description: 'Enable network address usage metrics for the VPC.',
      type: 'Boolean',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/network-address-usage.html',
    },
    tags,
  ],
};

const awsSubnet = {
  type: 'aws_subnet',
  blockType: 'resource',
  provider: 'aws',
  displayName: 'Subnet',
  description: 'A subnet is a range of IP addresses in your VPC. You can launch AWS resources into your subnets.',
  icon: 'Aws_Mesh',
  model: 'DefaultModel',
  url: 'https://docs.aws.amazon.com/vpc/latest/userguide/configure-subnets.html',
  categories: ['AWS', 'Networking'],
  tags: [],
  definedAttributes: [
    {
      ...vpcIdReference,
      description: 'The VPC ID to create the subnet in.',
      required: true,
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#vpc_id',
    },
    {
      name: 'gateway_id',
      type: 'Link',
      linkAttribute: 'id',
      linkRef: 'aws_internet_gateway',
      linkType: 'Default',
      linkModel: 'defaultLink',
    },
    {
      name: 'availability_zone',
      displayName: 'Availability zone',
      description: 'The Availability Zone for the subnet.',
      type: 'String',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#availability_zone',
    },
    {
      name: 'availability_zone_id',
      displayName: 'Availability zone ID',
      description: 'The ID of the Availability Zone for the subnet.',
      type: 'String',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#availability_zone_id',
    },
    {
      name: 'cidr_block',
      displayName: 'CIDR block',
      description: 'IPv4 CIDR block for the subnet',
      type: 'String',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#cidr_block',
      rules: {
        regex: '^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$',
      },
    },
    {
      name: 'customer_owned_ipv4_pool',
      displayName: 'Customer owned IPv4 pool',
      description: 'The ID of an address pool that you own.',
      type: 'String',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#customer_owned_ipv4_pool',
    },
    {
      name: 'map_customer_owned_ip_on_launch',
      displayName: 'Map customer owned IP on launch',
      description: 'Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address.',
      type: 'Boolean',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_customer_owned_ip_on_launch',
    },
    {
      name: 'map_customer_ip_on_launch',
      displayName: 'Map customer IP on launch',
      description: 'Specify true to indicate that instances launched into the subnet should be assigned a public IP address.',
      type: 'Boolean',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch',
    },
    {
      name: 'enable_dns64',
      displayName: 'Enable DNS64',
      description: 'Whether DNS queries made to the Amazon-provided DNS Resolver<br>in this subnet should return synthetic IPv6 addresses for IPv4-only destinations.',
      type: 'Boolean',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#enable_dns64',
    },
    {
      name: 'assign_ipv6_address_on_creation',
      displayName: 'Assign IPv6 address on creation',
      description: 'Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address.',
      type: 'Boolean',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#assign_ipv6_address_on_creation',
    },
    {
      name: 'ipv6_cidr_block',
      displayName: 'IPv6 CIDR block',
      description: 'The IPv6 network range for the subnet, in CIDR notation',
      type: 'String',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#ipv6_cidr_block',
      rules: {
        regex: '[a-fA-F0-9]{4}(:[a-fA-F0-9]{4}){7}',
      },
    },
    {
      name: 'ipv6_native',
      displayName: 'IPv6 native',
      description: 'Whether to create an IPv6-only subnet.',
      type: 'Boolean',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#ipv6_native',
    },
    {
      name: 'enable_resource_name_dns_a_record_on_launch',
      displayName: 'Enable ressource name DNS A record on launch',
      description: 'Whether to respond to DNS queries for instance hostnames with DNS A records.',
      type: 'Boolean',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#enable_resource_name_dns_a_record_on_launch',
    },
    {
      name: 'enable_resource_name_dns_aaaa_record_on_launch',
      displayName: 'Enable ressource name DNS AAAA record on launch',
      description: 'Whether to respond to DNS queries for instance hostnames with DNS AAAA records.',
      type: 'Boolean',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#enable_resource_name_dns_aaaa_record_on_launch',
    },
    {
      name: 'private_dns_hostname_type_on_launch',
      displayName: 'Private DNS hostname type on launch',
      description: 'The type of hostnames to assign to instances in the subnet at launch.',
      type: 'String',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#private_dns_hostname_type_on_launch',
    },
    {
      name: 'outpost_arn',
      displayName: 'Outpost Amazon Resource Name (ARN)',
      description: 'Amazon Resource Name (ARN) of the Outpost',
      type: 'String',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#outpost_arn',
    },
    {
      ...tags,
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#tags',
    },
  ],
};

const awsDbSubnetGroup = {
  type: 'aws_db_subnet_group',
  blockType: 'resource',
  provider: 'aws',
  displayName: 'AWS DB subnet group',
  description: 'A collection of subnets that you create in a VPC and that you then designate for your DB instances.',
  icon: 'AwsDbSubnetGroup',
  model: 'DefaultModel',
  url: 'https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html#USER_VPC.Subnets',
  categories: ['AWS', 'Networking'],
  tags: [],
  definedAttributes: [
    {
      name: 'subnet_ids',
      displayName: 'Subnet IDs',
      description: 'A list of VPC subnet IDs.',
      linkRef: 'aws_subnet',
      linkType: 'Default',
      linkModel: 'defaultLink',
      required: true,
      type: 'Link',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html',
    },
  ],
};

const awsRoute = {
  type: 'aws_route',
  blockType: 'resource',
  provider: 'aws',
  displayName: 'AWS route',
  description: 'Contains a set of rules, called routes, that determine where network traffic from your subnet or gateway is directed.',
  icon: 'Aws_Route-53',
  model: 'DefaultModel',
  url: 'https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html',
  categories: ['AWS', 'Networking'],
  tags: [],
  definedAttributes: [
    {
      name: 'route_table_id',
      displayName: 'Route table ID',
      description: 'The ID of the routing table.',
      containerRef: 'aws_route',
      required: true,
      type: 'Reference',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route#route_table_id',
    },
    {
      name: 'gateway_id',
      displayName: 'Gateway ID',
      description: 'Identifier of a VPC internet gateway or a virtual private gateway.',
      linkAttribute: 'id',
      linkRef: 'aws_internet_gateway',
      linkType: 'Default',
      linkModel: 'defaultLink',
      type: 'Link',
      url: 'https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route#gateway_id',
    },
  ],
};

const awsRouteTable = {
  type: 'aws_route_table',
  blockType: 'resource',
  provider: 'aws',
  displayName: 'Route table',
  description: 'A route table contains a set of rules, called routes, that determine where network traffic from your subnet or gateway is directed.',
  icon: 'Aws_Route-53_Route-Table',
  model: 'DefaultModel',
  url: 'https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html',
  categories: ['AWS', 'Networking'],
  tags: [],
  definedAttributes: [
    {
      ...vpcIdReference,
      description: 'The ID of the VPC for which to create the route table.',
      required: true,
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html',
    },
    {
      name: 'propagating_vgws',
      displayName: 'Propagating Virtual GateWays (VGWS)',
      description: 'List of virtual gateways for propagation',
      type: 'Array',
      url: 'https://docs.aws.amazon.com/directconnect/latest/UserGuide/virtualgateways.html',
    },
    tags,
  ],
};

const awsRouteTableAssociation = {
  type: 'aws_route_table_association',
  blockType: 'resource',
  provider: 'aws',
  displayName: 'Route table association',
  description: 'Association between a route table and a subnet, internet gateway, or virtual private gateway.',
  icon: 'Aws_Connector',
  model: 'DefaultModel',
  url: 'https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html',
  categories: ['AWS', 'Networking'],
  tags: [],
  definedAttributes: [
    {
      ...vpcIdReference,
      description: 'The ID of the VPC for which to create the route table association.',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html',
    },
    {
      name: 'route_table_id',
      displayName: 'Route table ID',
      description: 'The ID of the route table to associate the subnet with.',
      linkRef: 'aws_route_table',
      linkType: 'Reverse',
      linkModel: 'defaultLink',
      required: true,
      type: 'Link',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html',
    },
    {
      name: 'gateway_id',
      displayName: 'Gateway ID',
      description: 'The ID of the gateway to associate the route table with. Conflicts with subnet_id.',
      linkRef: 'aws_internet_gateway',
      linkType: 'Default',
      linkModel: 'defaultLink',
      type: 'Link',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html',
    },
    {
      ...subnetId,
      description: 'The ID of the subnet to associate the route table with. Conflicts with gateway_id.',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/configure-subnets.html',
    },
  ],
};

const awsInternetGateway = {
  type: 'aws_internet_gateway',
  blockType: 'resource',
  provider: 'aws',
  displayName: 'Internet gateway',
  description: 'An internet gateway is a horizontally scaled, redundant, and highly available VPC component<br>that allows communication between your VPC and the internet.',
  icon: 'Aws_VPC_Internet-Gateway',
  model: 'DefaultModel',
  url: 'https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html',
  categories: ['AWS', 'Networking'],
  tags: [],
  definedAttributes: [
    {
      ...vpcIdReference,
      description: 'The VPC ID to create the gateway in.',
      url: 'https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html',
    },
    tags,
  ],
};

export default [
  awsVpc,
  awsSubnet,
  awsDbSubnetGroup,
  awsRoute,
  awsRouteTable,
  awsRouteTableAssociation,
  awsInternetGateway,
];
